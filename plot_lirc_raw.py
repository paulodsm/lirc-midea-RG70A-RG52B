# -*- coding: utf-8 -*-
#
#
#
# Script to plot a raw code from remote control signal captured from mode2 on lirc
#
#
#
import matplotlib.pyplot as plt
import sys

#add as many raw codes as you want in the list bellow. they'll be plotted in the same graph

raw=['4402 4392 537 1643 537 561 532 1648 536 1643 536 558 536 558 536 1643 537 559 536 559 537 1647 537 558 536 559 534 1644 536 1643 537 558 542 1643 536 560 536 1643 536 1643 536 1643 537 1643 544 550 535 1647 537 1644 537 1649 536 557 536 558 536 557 536 557 536 1643 537 559 534 559 536 1649 536 1643 536 1643 536 558 535 558 536 557 536 557 536 559 536 559 537 556 537 557 536 1647 536 1644 535 1642 537 1643 535 1645 534 5251 4386 4390 536 1643 536 565 528 1646 537 1642 536 558 536 557 536 1644 535 559 536 559 536 1647 536 557 536 558 535 1643 543 1636 536 557 537 1648 535 559 537 1643 536 1643 536 1642 537 1642 537 557 536 1646 537 1645 535 1649 536 557 540 553 537 557 535 557 536 1642 536 558 535 560 536 1649 535 1643 537 1642 536 557 536 557 539 555 535 557 536 560 535 559 537 557 535 557 536 1647 536 1643 536 1642 536 1644 535 1645 535','4384 4383 537 1640 540 554 538 1643 538 1642 536 556 537 555 537 1641 537 558 539 555 538 1644 538 556 535 556 538 1640 537 1641 538 559 534 1645 537 1647 538 555 534 558 538 1640 537 1640 537 1641 538 1640 537 1643 542 552 539 1639 537 1641 538 556 535 557 536 556 537 556 537 557 537 1643 537 1640 538 555 536 557 538 555 537 556 536 556 537 557 537 558 537 554 538 1644 536 1642 536 1641 538 1640 537 1641 537 1641 538 5218 4387 4383 540 1639 536 556 537 1645 535 1644 535 556 536 557 536 1641 538 556 535 560 536 1645 536 557 536 555 537 1640 538 1640 536 557 535 1647 536 1648 535 557 537 555 537 1640 536 1641 536 1642 537 1641 536 1643 536 558 537 1640 538 1640 535 559 536 555 536 556 536 557 536 560 535 1642 537 1640 537 556 537 554 537 556 537 556 536 556 538 556 537 557 537 556 536 1644 537 1641 535 1641 537 1640 538 1640 536 1643 537']

values_tot=[]
k=0
for i in raw:
	values_tot.append([])
	for j in raw[k].split(' '):
		values_tot[k].append(int(j))
	k+=1	

	#print (sum(values_tot[k-1]))

#print(values_tot)


#sys.exit(1)

k=0
for values in values_tot:

	x=[]
	y=[]

	xabs=0
	xtot=sum(values)

	i=0
	while xabs<=xtot:
		
		
		xinterno=0
		while xinterno <= values[i]:
		
			if i%2 == 0:
				y.append(k+1)
			
			if i%2 == 1:
				y.append(k+0)
						
			x.append(xabs)
			
			xabs+=1
			xinterno+=1
		i+=1

	k+=1.1


	plt.plot(x, y)		
			

plt.show()
#plt.savefig('graf.png')
		
		
		
